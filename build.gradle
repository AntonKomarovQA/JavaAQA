plugins {
    id 'java'
    id "io.freefair.lombok" version "8.4"  //Добавлен новый плагин
    id "io.qameta.allure" version "2.11.2" // аллюр плагин
}
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.1'
    // Добавил зависимость возможности параметризированных тестов
    testImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.1'
    //Библиотека для преобразования в обьекты
    testImplementation 'org.aeonbits.owner:owner:1.0.4' //Библиотека для чтение файлов (Настроек)
    testImplementation 'org.apache.commons:commons-io:1.3.2' // Библиотека нужна для работы с файлами
    testImplementation 'ch.qos.logback:logback-classic:1.2.9'
}

tasks.register("myTags", Test.class) {
    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "failed", "skipped"
        }
    }
    String fullTags = System.getProperty("customTags")
    if (fullTags != null) {
        String[] tags = System.getProperty("customTags").split(",")
        useJUnitPlatform() {
            for (String tag : tags) {
                includeTags.add(tag)
            }
        }
    }
}